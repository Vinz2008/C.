import @std/print.cpoint

enum test_enum {
    tag_int(int)
    tag_float(float)
    tag_alone
}

enum test_enum_without_val {
    tag_alone1
    tag_alone2
}

enum test_enum_custom_index {
    tag_index1 = 3
    tag_index2 = 4
}

func main(){
    var te : enum test_enum = test_enum::tag_int(1)
    var te2 : enum test_enum = test_enum::tag_float(2.0)
    var te3 : enum test_enum = test_enum::tag_alone
    match te {
        test_enum::tag_int(i) => printi(i),
        test_enum::tag_float(f) => printd(f),
        test_enum::tag_alone => { 
            printstr("no tag")
        }
    }
    match te2 {
        test_enum::tag_int(i) => printi(i),
        _ => {
            printstr("not int tag")
        }
    }
    var te_w : enum test_enum_without_val = test_enum_without_val::tag_alone2
    match te_w {
        test_enum_without_val::tag_alone2 => printstr("tag_alone2"),
        _ => printstr("not tag_alone2"),
    }
    var te_c : enum test_enum_custom_index = test_enum_custom_index::tag_index2
    match te_c {
        test_enum_custom_index::tag_index1 => {
            printstr("tag_index1")
        }
        test_enum_custom_index::tag_index2 => {
            printstr("tag_index2")
        }
    }
    var n : double = 2
    match n {
        1 => printstr("1"),
        2 => printstr("2"),
        _ => {
            printstr("other")
        }
    }
    var b : bool = true
    match b {
        false => printstr("false"),
        true => printstr("true"),
    }
}