include capi.hpoint
include libc.hpoint
import print.cpoint

type fd_t int;

mod file {

func open(path : i8 ptr) int {
    var mode : int = S_IRWXU
    var o_rdwr : int = O_RDWR
    var o_creat : int = O_CREAT
    open(path, o_rdwr | o_creat, mode)
}

func write(fd : int, buf : i8 ptr) int {
    cwritefile(fd, buf)
}

func close(fd : int) int {
    close(fd)
}

func create(path : i8 ptr) int {
    if file::open(path) == -1 {
        return -1
    }
    if file::close(path) == -1 {
        return -1
    }
}

func remove(path : i8 ptr) int {
    remove(path)
}

// TODO : fix this
func get_line(fd : int) i8 ptr {
    var buffer_size = 20
    var buffer : i8 ptr = gc_malloc(buffer_size * sizeof i8)
    var pos : int = 0
    while read(fd, buffer + pos, 1) > 0 {
        // printf("%c\n", line[i])
        printf("buffer : %s\n", buffer)
        if buffer[pos] == '\n' {
            break
        }
        pos = pos + 1
        if pos == buffer_size {
            buffer_size = buffer_size + 10
            buffer = gc_realloc(buffer, buffer_size * sizeof i8)
        }
    }
    buffer[pos+1] = '\0'
    printf("buffer final : %s buffer final\n", buffer)
    var line : i8 ptr = gc_malloc(buffer_size * sizeof i8)
    var pos_line = 0
    for i = 0, i < strlen(buffer), 1 {
        if buffer[i] == '\n'{
            break
        }
        // line[i] = buffer[i]
        pos_line = i
    }
    line[pos_line] = '\0'
    line
}

// TODO : fix this
func get_file_size(fd : int) i64 {
    var buf : struct stat
    var ret = fstat(fd, addr buf)
    if ret == -1 {
        #panic("getting file size failed")
    }
    buf.st_size
}

func read_to_string(fd : int) i8 {
    var size = file::get_file_size(fd)
    var buf = gc_malloc(sizeof i8 * (size+1))
    var ret = read(fd, buf, size)
    while ret != 0 {
        ret = read(fd, buf, size)
    }
    buf
}

func canonicalize(path : i8 ptr) i8 ptr {
    var canonicalized_path : i8 ptr = gc_malloc(4096 * sizeof i8)
    realpath(path, canonicalized_path)
    canonicalized_path
}

func symlink(file_name : i8 ptr, symlink_name : i8 ptr) int {
    symlink(file_name, symlink_name)
}

}