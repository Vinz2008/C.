include libm.hpoint

mod math {
    func cos(arg : double) double {
        cos(arg)
    }
    func sin(arg : double) double {
        sin(arg)
    }
    func tan(arg : double) double {
        tan(arg)
    }
    func acos(arg : double) double {
        acos(arg)
    }
    func asin(arg : double) double {
        asin(arg)
    }
    func atan(arg : double) double {
        atan(arg)
    }
    func atan2(arg : double, arg2 : double) double {
        atan2(arg, arg2)
    }
    func cosh(arg : double) double  {
        cosh(arg)
    }
    func sinh(arg : double) double {
        sinh(arg)
    }
    func tanh(arg : double) double {
        tanh(arg)
    }
    func acosh(arg : double) double {
        acosh(arg)
    }
    func asinh(arg : double) double {
        asinh(arg)
    }
    func atanh(arg : double) double {
        atanh(arg)
    }
    func exp(arg : double) double {
        exp(arg)
    }
    func frexp(arg : double, exp : int ptr) double {
        frexp(arg, exp)
    }
    func ldexp(arg : double, exp : int) double {
        ldexp(arg, exp)
    }
    func log(arg : double) double {
        log(arg)
    }
    func log10(arg : double) double {
        log10(arg)
    }
    func modf(arg : double, intpart : double ptr) double {
        modf(arg, intpart)
    }
    func exp2(arg : double) double {
        exp2(arg)
    }
    func expm1(arg : double) double {
        expm1(arg)
    }
    func ilogb(arg : double) int {
        ilogb(arg)
    }
    func log1p(arg : double) double {
        log1p(arg)
    }
    func log2(arg : double) double {
        log2(arg)
    }
    func logb(arg : double) double {
        logb(arg)
    }
    func scalbn(arg : double, n : int) double {
        scalbn(arg, n)
    }
    func scalbln(arg : double, n : i64) double {
        scalbln(arg, n)
    }
    func pow(base : double, exponent : double) double {
        pow(base, exponent)
    }
    func sqrt(arg : double) double {
        sqrt(arg)
    }
    func cbrt(arg : double) double {
        cbrt(arg)
    }
    func hypot(arg : double, arg2 : double) double {
        hypot(arg, arg2)
    }
}

test "sin" {
	sin(2)
}

test "cos" {
	cos(4)
}