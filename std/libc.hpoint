?[define O_RDONLY 00]
?[define O_WRONLY 01]
?[define O_RDWR 02]
?[define O_CREAT 64]
?[define S_IRWXU 448]

?[define STDIN_FILENO 0]
?[define STDOUT_FILENO 1]
?[define STDERR_FILENO 2]

?[define F_OK 0]
?[define R_OK 4]
?[define W_OK 2]
?[define X_OK 1]

?[define EACCES 13]
?[define EEXIST 17]
?[define ENAMETOOLONG 36]

extern puts(s : i8 ptr) int;
extern putchar(c : int) int;
extern exit(code : int) void;
extern open(path : i8 ptr, flag : int ...) int;
extern close(fd : int) int;
extern read(fd : int, buf : void ptr, size : i64) i64;
extern malloc(size : int) void ptr;
extern strdup(s : i8 ptr) i8 ptr;
extern strcpy(dest : i8 ptr, src : i8 ptr) i8 ptr;
extern strcat(dest : i8 ptr, src : i8 ptr) i8 ptr;
extern strcmp(s1 : i8 ptr, s2 : i8 ptr) int;
extern strncat(dest : i8 ptr, src : i8 ptr, size : int) i8 ptr;
extern strncpy(dest : i8 ptr, src : i8 ptr, size : int) i8 ptr;
extern strlen(str : i8 ptr) i64;
extern remove(path : i8 ptr) int;
extern mkdir(path : i8 ptr, mode : int) int;
extern realpath(path : i8 ptr, resolved_path : i8 ptr) i8 ptr;
extern symlink(file_name : i8 ptr, symlink_name : i8 ptr) int;
extern printf(format : i8 ptr ...) int;
extern system(cmd : i8 ptr) int;
extern chdir(path : i8 ptr) int;
extern dup(fd : int) int;
extern isatty(fd : int) int;
extern getcwd(buf : i8 ptr) i8 ptr;
extern getenv(var_name : i8 ptr) i8 ptr;
extern setenv(var_name : i8 ptr, value : i8 ptr, overwrite : int) int;
extern unsetenv(var_name : i8 ptr) int;


// opaque type
struct DIR {
    var i : int
}
extern opendir(name : i8 ptr) struct DIR ptr;

// opaque type
struct dirent {
    var d_ino : i64
    var d_off : i64
    var d_reclen : u16
    var d_type : u8
    var d_name[256] : i8
}
extern readdir(dir : struct DIR ptr) struct dirent ptr;
extern closedir(dir : struct DIR ptr) int; 

type pthread_t i64;
type time_t i64;